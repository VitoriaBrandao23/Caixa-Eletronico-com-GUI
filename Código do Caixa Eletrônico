#EM DESENVOLVIMENTO
from tkinter import *
import time

lista_id = ['José Ribeira', 'Davi']       #adicionar mais usuários futuramente
lista_senha = ['PROC89ziu', '123456']

class Caixa_Banco():
    def __init__(self, saldo):    
        self.saldo = saldo
   
    #Funções do caixa
    def Ver_Saldo(self):
        return self.saldo
    def Depositar(self, valor):
        self.saldo = self.saldo + int(valor)
        resultado = 'Saldo atual:', self.saldo
        return self.saldo, resultado
    def Sacar(self, valor):
        if self.saldo < valor:
            resultado2 = 'Saldo insuficiente\nSaldo atual:', self.saldo
            return resultado2
        else:
            self.saldo = self.saldo - valor
            resultado3 = 'Saque realizado com sucesso!\nSaldo atual:', self.saldo
            return self.saldo, resultado3

c1 = Caixa_Banco(56)             #objeto

tela = Tk()                       #criando 1° tela
tela.geometry('300x200')

fonte_padrao = ('Arial', '10')

tela.title('Caixa Eletrônico')
tela_inicial = Label(tela, text = 'Banco TEX')
tela_inicial['font'] = ('Arial', '12', 'bold', 'italic')
tela_inicial.grid(row = 1, column = 1)

recepção = Label(tela, text = 'Olá, bem vindo ao seu banco!\nDigite seu nome e senha eletrônica')
recepção['font'] = fonte_padrao
recepção.grid(row = 3, column = 1)

nome = Label(tela, text = '  Nome:', font = fonte_padrao)
nome.grid(row = 4, column = 0)

caixa_nome = Entry(tela)
caixa_nome['width'] = 29
caixa_nome.grid(row = 4, column = 1)

senha = Label(tela, text = '  Senha:', font = fonte_padrao)
senha.grid(row = 5, column = 0)

caixa_senha = Entry(tela, font = fonte_padrao)
caixa_senha['width'] = 25
caixa_senha['show'] = '*'
caixa_senha.grid(row = 5, column = 1)

mensagem = Label(tela, text = '', font = fonte_padrao)
mensagem.grid(row = 9, column = 1)
#funções

#Criando janela 2
def Janela2():

    tela.destroy()
    time.sleep(0.3)

    tela2 = Tk()
    tela2.geometry('300x200')
    tela2.title('Operações do Caixa')

    texto = "\n  1 = Ver saldo\n\n  2 = Depositar\n"
    texto2 = "\n  3 = Sacar\n\n4 = Sair\n"

    acao1 = Label(tela2, text = texto, font = fonte_padrao)
    acao1.grid(row = 1, column = 0)

    acao2 = Label(tela2, text = texto2, font = fonte_padrao)
    acao2.grid(row = 1, column = 1)

    orienta = Label(tela2, text = '    Digite o número para', font = fonte_padrao)
    orienta.grid(row = 4, column = 0)

    orienta = Label(tela2, text = 'realizar a ação desejada : ', font = fonte_padrao)
    orienta.grid(row = 4, column = 1)

    caixa_num = Entry(tela2)
    caixa_num['width'] = 20
    caixa_num.grid(row = 7, column = 0)

    #função
    def Saldo():                #janela 3

        tela2.destroy()
        time.sleep(0.3)

        tela3 = Tk()
        tela3.geometry('300x200')
        tela3.title('Saldo Bancário')
        
        texto = f'Seu saldo atual é de R${c1.Ver_Saldo()}'  

        v1 = Label(tela3, text = texto, font = fonte_padrao)
        v1.grid(row = 1, column = 1)
    
    def Deposito():            #janela 4

        tela2.destroy()
        time.sleep(0.3)

        tela4 = Tk()
        tela4.geometry('300x200')
        tela4.title('Depositar')
        
        texto = '\n   Por favor, digite o valor'

        d1 = Label(tela4, text = texto, font = fonte_padrao)
        d1.grid(row = 1, column = 1)

        texto2 = '   que deseja depositar :'

        d2 = Label(tela4, text = texto2, font = fonte_padrao)
        d2.grid(row = 2, column = 1)

        dep_valor = Entry(tela4)
        dep_valor['width'] = 20
        dep_valor.grid(row = 2, column = 2)

        #perguntar valor para depósito, armazenar resposta em quantia
        #Depositar(quantia)
        quantia = int(dep_valor.get())   #ValueError: invalid literal for int() with base 10: ''
        
        #botão DEPOSITAR
        depositado = Button(tela4)
        depositado['text'] = 'Realizar Depósito'
        depositado['font'] = fonte_padrao
        depositado['width'] = 15
        depositado['command'] = c1.Depositar(quantia)
        depositado.grid(row = 4, column = 2)

    def Saque():

        tela2.destroy()
        time.sleep(0.3)

        tela5 = Tk()
        tela5.geometry('300x200')
        tela5.title('Sacar')

        texto = '\n Por favor digite o valor'

        s1 = Label(tela5, text = texto, font = fonte_padrao)
        s1.grid(row = 1, column = 1)

        texto2 = ' que deseja sacar :'

        s2 = Label(tela5, text = texto2, font = fonte_padrao)
        s2.grid(row = 2, column = 1)

        saq_valor = Entry(tela5)
        saq_valor['width'] = 20
        saq_valor.grid(row = 2, column = 2)

        #perguntar valor para depósito, armazenar resposta em quantia
        #Sacar(quantia)
        quantia2 = int(saq_valor.get())  #ValueError: invalid literal for int() with base 10: ''

        #botão SACAR
        sacando = Button(tela5)
        sacando['text'] = 'Realizar Saque'
        sacando['font'] = fonte_padrao
        sacando['width'] = 15
        sacando['command'] = c1.Sacar(quantia2)
        sacando.grid(row = 3, column = 2)
    
    def Operacao():

        caixa_num.get()

        if caixa_num.get() == '1':
            Saldo() 
        if caixa_num.get() == '2':
            Deposito() 
        if caixa_num.get() == '3':
            Saque()
        if caixa_num.get() == '4':
            time.sleep(0.2)
            tela2.destroy()

    next = Button(tela2)
    next['text'] = 'Continuar'
    next['font'] = fonte_padrao
    next['width'] = 10
    next['command'] = Operacao
    next.grid(row = 7, column = 1)

#Verifica usuário
def Verificar_usuario():

    if caixa_nome.get() in lista_id and caixa_senha.get() in lista_senha:
        Janela2()
    else:
        mensagem['text'] = 'Usuário não identificado!'

#Botão
login = Button(tela)
login['text'] = 'Entrar'
login['font'] = fonte_padrao
login['width'] = 10
login['command'] = Verificar_usuario
login.grid(row = 7, column = 1)

tela.mainloop()
